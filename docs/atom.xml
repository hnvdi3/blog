<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HnvDie</title><description>wannabe hacker</description><link>https://hnvdie.github.io/</link><language>en</language><copyright>Copyright 2022, Ronalds Vilcins</copyright><lastBuildDate>Thu, 01 Sep 2022 00:00:00 +0000</lastBuildDate><generator>Hugo - gohugo.io</generator><docs>http://cyber.harvard.edu/rss/rss.html</docs><atom:link href="https://ronaldsvilcins.com/atom.xml" rel="self" type="application/atom+xml"/><item><title>os command injection</title><link>https://hnvdie.github.io/os-command-injection/</link><description>
&lt;img src="https://hnvdie.github.io/images/cuteheker.jpeg">
&lt;!-- raw HTML omitted -->
&lt;p>os command injection biasanya terjadi ketika seorang web developer keliru
dalam mengatur penerimaan input didalam situsnya. biasanya terjadi ketika
form input yang dibuat menggunakan fungsi seperti &lt;code>exec()&lt;/code>, &lt;code>system()&lt;/code>, dll.
tergantung fungsi tersebut berasal dari bahasa pemogramman apa. jika python
biasanya menggunakan &lt;code>os.system()&lt;/code> atau &lt;code>eval()&lt;/code>, etc.&lt;/p>
&lt;p>tentu saja ini jadi sesuatu yang sangat berbahaya dikarenakan attacker dapat
memasukan perintah berbahaya kedalam shell sistem operasi yang ada disitus tersebut.&lt;/p>
&lt;blockquote>
&lt;p>Serangan command injection bisa terjadi ketika sebuah aplikasi
(forms, cookies, HTTP headers, dll) bisa menjalankan perintah yang
tidak aman dari inputan user ke sistem shell.
&lt;a href="https://crashtest-security.com/command-injection/">crashtest security&lt;/a>
&lt;/p>
&lt;/blockquote>
&lt;p>menurut crashtest security, os command injection tidak hanya bisa terjadi
di forms melainkan bisa saja ditempat lain seperti diatas.&lt;/p>
&lt;h1 id="demonstrasi">demonstrasi &lt;a href="#demonstrasi" class="hash">#&lt;/a>&lt;/h1>
&lt;p>contoh kode php yang rentan dengan os command injection karena ketiadaan
validasi input ataupun proses filtering.&lt;/p>
&lt;pre>&lt;code class="language-shell">&amp;lt;?php
$ip = $_GET['ip'];
$cmd = system('ping '.$ip);
echo $cmd
?&amp;gt;
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>buat file &lt;code>ping.php&lt;/code> &amp;amp; jalankan diterminal kalian&lt;/li>
&lt;/ul>
&lt;p>&lt;code>$ php -S 127.0.0.1:8000 -t .&lt;/code>&lt;/p>
&lt;p>kunjungi dan cobalah masukan input seperti ini&lt;/p>
&lt;p>&lt;strong>http://127.0.0.1:8000/ping.php?ip=cat%20/etc/passwd&lt;/strong>&lt;/p>
&lt;p>maka jika dibrowser saya, ini tidak menghasilkan apa-apa. dikarenakan perintah
&lt;strong>cat /etc/passwd&lt;/strong> masih dianggap sebagai argumen untuk ping.&lt;/p>
&lt;pre>&lt;code class="language-shell">[Thu Sep 1 18:16:34 2022] 127.0.0.1:41126 Accepted
ping: unknown host cat
[Thu Sep 1 18:16:34 2022] 127.0.0.1:41125 [200]: GET /ping.php?ip=cat%20/etc/passwd
[Thu Sep 1 18:16:34 2022] 127.0.0.1:41125 Closing
&lt;/code>&lt;/pre>
&lt;p>bisa dilihat disana ada pesan &lt;strong>uknown host cat&lt;/strong>. yang menandakan perintah cat
kita dianggap destination dari ping. nah kalian bisa mencoba nya lagi
dengan membatalkan perintah ping dengan shell escapes.&lt;/p>
&lt;pre>&lt;code>;
|
||
&amp;lt;
&amp;amp;
&amp;amp;&amp;amp;
$()
&lt;/code>&lt;/pre>
&lt;p>let&amp;rsquo;s try again&lt;/p>
&lt;p>&lt;strong>http://127.0.0.1:8000/ping.php?ip=;cat /etc/passwd&lt;/strong>&lt;/p>
&lt;p>maka kalian bisa melihat bahwa disini kita berhasil untuk melakukan perintah cat
terhadap file passwd.&lt;/p>
&lt;img src="https://hnvdie.github.io/images/oci.jpg">
&lt;p>btw saya ngejalanin file php nya di termux, jadi output dari &lt;strong>/etc/passwd&lt;/strong> nya
agak aneh hhe.&lt;/p>
&lt;h1 id="other-references">other references &lt;a href="#other-references" class="hash">#&lt;/a>&lt;/h1>
&lt;p>beberapa referensi lain yang membahas command injection lebih detail.&lt;/p>
&lt;ul>
&lt;li>command injection
&lt;a href="https://book.hacktricks.xyz/pentesting-web/command-injection">https://book.hacktricks.xyz/pentesting-web/command-injection&lt;/a>&lt;/li>
&lt;/ul></description><author>ronalds.vilcins@gmail.com (Ronalds Vilcins)</author><guid>https://hnvdie.github.io/os-command-injection/</guid><pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate></item><item><title>Bypass IP restriction at sfile.mobi - writeup</title><link>https://hnvdie.github.io/bypass-ip-restriction-at-sfile.mobi/</link><description>&lt;p>
&lt;a href="https://www.indiedb.com/groups/tanks/images/girls-und-panzer-gif" title="Girls und Panzer GIF - Indie DB" target="_blank">&lt;img src="https://media.indiedb.com/cache/images/groups/1/3/2074/thumb_620x2000/maus_gif.gif" alt="Girls und Panzer GIF" />&lt;/a>
write up sederhana tentang bagaimana saya bisa menemukan bug IP restriction bypass di situs sfile.mobi.&lt;/p>
&lt;p>dan mendapatkan reward yang lumayan, hanya karena laporan bug sepele ini.&lt;/p>
&lt;h3 id="fyi-for-you-information">FYI (For you information) &lt;a href="#fyi-for-you-information" class="hash">#&lt;/a>&lt;/h3>
&lt;p>jadi sebelumnya saya menemukan data leakage dari salah satu website yang tidak bisa saya sebutkan. karena ini privasi web diluar sfile.mobi. yang mana
data tersebut berisi informasi seperti username, password dan email. dikarenakan situs yang terdapat data leakage tersebut adalah situs yang memiliki latar belakang seperti sfile.mobi juga. yaitu service &lt;strong>free file sharing service&lt;/strong>. jadinya saya mempunyai ide yang cukup cemerlang.&lt;/p>
&lt;p>karena saya sering mengunjungi situs sfile.mobi buat download config :/&amp;lt;
terlintas dalam pikiran saya.&lt;/p>
&lt;p>&amp;ldquo;&lt;em>apa para pengguna didata yang saya miliki ini, juga login disitus sfile.mobi?&lt;/em>&amp;rdquo;&lt;/p>
&lt;p>dan yap tercetus lah ide untuk melakukan brute-forcing.&lt;/p>
&lt;h1 id="proof-of-concept">Proof OF Concept &lt;a href="#proof-of-concept" class="hash">#&lt;/a>&lt;/h1>
&lt;p>awalnya saya mencoba mengunjungi halaman sfile.mobi dan ke halaman loginnya untuk melakukan web scraping.
yang URL nya berada disini.&lt;/p>
&lt;p>&lt;code>https://sfile.mobi/login.php&lt;/code>&lt;/p>
&lt;p>dengan tujuan membuat tool atau bot otomatisasi login dengan ribuan data yang saya punya
diatas tadi. awalnya saya hanya menulis program sederhana untuk mencobanya. dan ini hasil yang
saya temukan.&lt;/p>
&lt;img src="https://hnvdie.github.io/images/pp1.jpg" >
source code: &lt;a href=" https://pastebin.com/raw/Kg3p0XKx">pastebin&lt;/a>
&lt;p>terlihat disana menunjukan status kode 401 dan programnya crash (stuck) tidak jalan lagi.
dikarenakan halaman loginnya sudah tidak bisa diakses atau terkena limit IP.
sama hal ketika saya kunjungi melalui browser, IP saya pun sudah terbanned.&lt;/p>
&lt;img src="https://hnvdie.github.io/images/pp2.jpg" >
&lt;p>lantas saya mencoba alternatif lain untuk melakukan brute-force tanpa harus terkena limit IP.&lt;/p>
&lt;p>yang pertama saya mencoba dengan proxy namun tetap saja gagal, tidak bisa ditembus.
langkah kedua saya mencoba melakukan injeksi terhadap headers ketika melakukan POST
request.yaitu melakukan bypass IP source restrictions dengan HTTP headers.&lt;/p>
&lt;p>disini saya hanya memodifikasi header nya dengan menambahkan nilai.&lt;/p>
&lt;pre>&lt;code class="language-shell">&amp;quot;X-Forwarded-For&amp;quot;: IP SPOOF / FAKE IP
&lt;/code>&lt;/pre>
&lt;p>untuk fake IP saya hanya membuat alamat ip random, asal-asalan saja.
dengan syntax python seperti ini atau bisa lihat lengkap disource code bawah.&lt;/p>
&lt;pre>&lt;code class="language-python">ip = &amp;quot;.&amp;quot;.join(map(str, (random.randint(0, 255) for _ in range(4))))
&lt;/code>&lt;/pre>
source code: &lt;a href="https://pastebin.com/raw/Z8nG0T7s">pastebin&lt;/a>
&lt;p>ketika saya jalankan programnya, ternyata IP limit bypassed. saya mencoba ngeload sekitar
ribuan akun ternyata bisa dan mendapatkan banyak akun yang online (registered) di platform
sfile.mobi.&lt;/p>
&lt;img src="https://hnvdie.github.io/images/pp3.jpg" >
&lt;ul>
&lt;li>status bug: &lt;code>patched&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="referensi-tentang-ip-restriction-bypass">Referensi tentang IP restriction bypass &lt;a href="#referensi-tentang-ip-restriction-bypass" class="hash">#&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>403/401 Bypasses
&lt;a href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/403-and-401-bypasses">https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/403-and-401-bypasses&lt;/a>&lt;/li>
&lt;li>403/401 bypass hackerone report
&lt;a href="https://hackerone.com/reports/991717">https://hackerone.com/reports/991717&lt;/a>&lt;/li>
&lt;li>IP restriction (root-me CTF)
&lt;a href="https://archiko.my.id/archives/root-me-writeup-ip-restriction-bypass/">https://archiko.my.id/archives/root-me-writeup-ip-restriction-bypass/&lt;/a>&lt;/li>
&lt;li>403 bypass - medium
&lt;a href="https://sapt.medium.com/bypassing-403-protection-to-get-pagespeed-admin-access-822fab64c0b3">https://sapt.medium.com/bypassing-403-protection-to-get-pagespeed-admin-access-822fab64c0b3&lt;/a>&lt;/li>
&lt;/ul></description><author>ronalds.vilcins@gmail.com (Ronalds Vilcins)</author><guid>https://hnvdie.github.io/bypass-ip-restriction-at-sfile.mobi/</guid><pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate></item><item><title>summary of reconnaissance for web application bug hunting ðŸ•·</title><link>https://hnvdie.github.io/reconnaissance-summary/</link><description>
&lt;img src="https://images.unsplash.com/photo-1562813733-b31f71025d54?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=869&amp;q=80">
&lt;p>&lt;code>**notes**: &lt;/code>&lt;/p>
&lt;ul>
&lt;li>in this article if you found text like this &lt;code>here&lt;/code> is a tools or platforms. you just search that on google or other search engines.&lt;/li>
&lt;li>this article will be to always updated if me found new techniques or methods.&lt;/li>
&lt;/ul>
&lt;h1 id="base">base &lt;a href="#base" class="hash">#&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>whois: &lt;code>whois&lt;/code>&lt;/li>
&lt;li>ssl information: &lt;code>sslscan&lt;/code>&lt;/li>
&lt;li>dns enum: &lt;code>dnsrecon&lt;/code> &lt;code>nslookup&lt;/code> &lt;code>dnsx&lt;/code> &lt;code>dnsenum&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/dnsx-dns-toolkit-allow-to-run-multiple-dns-queries/amp/">https://www.geeksforgeeks.org/dnsx-dns-toolkit-allow-to-run-multiple-dns-queries/amp/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://medium.com/geekculture/dns-enumeration-3dc90ca1f670">https://medium.com/geekculture/dns-enumeration-3dc90ca1f670&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-dns">https://book.hacktricks.xyz/network-services-pentesting/pentesting-dns&lt;/a>&lt;/p>
&lt;ul>
&lt;li>identify web technology: &lt;code>whatweb&lt;/code> &lt;code>w3techs&lt;/code> &lt;code>wappalyzer&lt;/code> &lt;code>cmsmap&lt;/code>&lt;/li>
&lt;li>check webapp firewall: &lt;code>wafw00f&lt;/code>&lt;/li>
&lt;li>check security headers: &lt;code>shcheck&lt;/code>&lt;/li>
&lt;li>subdo enum: &lt;code>subfinder&lt;/code> &lt;code>sublist3r&lt;/code>&lt;/li>
&lt;li>extracting all IP from collected subdo&lt;/li>
&lt;li>port scanning &amp;amp; banner grabbing: &lt;code>nmap&lt;/code> &lt;code>amass&lt;/code> &lt;code>aquatone&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Using Nmap Scripts: Nmap Banner Grab
&lt;a href="https://linuxhint.com/nmap_banner_grab">https://linuxhint.com/nmap_banner_grab&lt;/a>&lt;/p>
&lt;p>&lt;strong>mass ports scanning with nmap&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-shell">$ nmap -iL subdolist.txt -Pn -sV -n -T4 -v -oN output.txt
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>vuln scan + banner grabbing&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-shell">$ nmap -iL subdolist.txt -Pn -sV -n -T4 -v -d --script vuln -oN output.txt
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>check domain takeoverv: &lt;code>subzy&lt;/code>&lt;/li>
&lt;li>domain &amp;amp; subdo osint: &lt;code>shodan&lt;/code> &lt;code>censys&lt;/code>&lt;/li>
&lt;li>check http(s) 80/443 &amp;gt; &lt;code>httpx&lt;/code> &amp;gt; &lt;code>altdns&lt;/code> &amp;gt; &lt;code>nuclei&lt;/code>&lt;/li>
&lt;li>reverse IP lookup &lt;code>hackertarget&lt;/code> &lt;code>googledork&lt;/code> &lt;code>bing&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="content-discovery">Content discovery &lt;a href="#content-discovery" class="hash">#&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>fuzzing, &lt;code>wfuzz&lt;/code>&lt;/p>
&lt;ul>
&lt;li>get error like sql inject, system crash, dos, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ffuf&lt;/code>&lt;/p>
&lt;ul>
&lt;li>search directory, sensitive data, etc.&lt;/li>
&lt;li>find API path / Endpoint&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>waybackurls&lt;/code>&lt;/p>
&lt;ul>
&lt;li>if link possible to vuln. scanning with &lt;code>nuclei&lt;/code> or fuzzing again with &lt;code>ffuf&lt;/code>
for getting vulnerability like sqli.&lt;/li>
&lt;li>get files from target like php, aspx, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>extract js files&lt;/p>
&lt;ul>
&lt;li>scan endpoint, API, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>github dorking &amp;gt; &lt;code>githound&lt;/code>&lt;/p>
&lt;ul>
&lt;li>checking leaked credential, tokens, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;img src="https://i.ibb.co/Hx6whny/IMG-20220824-153323.jpg">
&lt;ul>
&lt;li>google dorking
&lt;ul>
&lt;li>content discovery with &lt;code>google hacking&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="tips">Tips &lt;a href="#tips" class="hash">#&lt;/a>&lt;/h1>
&lt;p>â€¢ always see web source code because sometimes you can found somethink interesting which not found or not gained in your tool recon.&lt;/p>
&lt;p>â€¢ if you found admin path like admin/. fuzzing again with ffuf like admin/FUZZ. you can find somethink interesting files or dir again if lucky.&lt;/p>
&lt;h1 id="extra-resources-for-you-3">Extra resources for you :3 &lt;a href="#extra-resources-for-you-3" class="hash">#&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>Cool Recon techniques every hacker misses! ðŸ”¥ðŸ”¥&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://infosecwriteups.com/cool-recon-techniques-every-hacker-misses-1c5e0e294e89">https://infosecwriteups.com/cool-recon-techniques-every-hacker-misses-1c5e0e294e89&lt;/a>&lt;/p></description><author>ronalds.vilcins@gmail.com (Ronalds Vilcins)</author><guid>https://hnvdie.github.io/reconnaissance-summary/</guid><pubDate>Fri, 26 Aug 2022 00:00:00 +0000</pubDate></item></channel></rss>