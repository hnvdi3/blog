{"version":"https://jsonfeed.org/version/1","title":"HnvDie","home_page_url":"https://hnvdie.github.io/","feed_url":"https://ronaldsvilcins.com/feed.json","description":"wannabe hacker","icon":"https://ronaldsvilcins.com/assets/apple-touch-icon.png","favicon":"https://ronaldsvilcins.com/assets/favicon.ico","expired":false,"author":{"name":"Ronalds Vilcins","url":"https://ronaldsvilcins.com/"},"items":[{"id":"bffdcc4445b0b0ec302305fcf2a387b4228f7494","title":"os command injection","summary":"","content_text":" os command injection biasanya terjadi ketika seorang web developer keliru dalam mengatur penerimaan input didalam situsnya. biasanya terjadi ketika form input yang dibuat menggunakan fungsi seperti exec(), system(), dll. tergantung fungsi tersebut berasal dari bahasa pemogramman apa. jika python biasanya menggunakan os.system() atau eval(), etc.\ntentu saja ini jadi sesuatu yang sangat berbahaya dikarenakan attacker dapat memasukan perintah berbahaya kedalam shell sistem operasi yang ada disitus tersebut.\nSerangan command injection bisa terjadi ketika sebuah aplikasi (forms, cookies, HTTP headers, dll) bisa menjalankan perintah yang tidak aman dari inputan user ke sistem shell. crashtest security menurut crashtest security, os command injection tidak hanya bisa terjadi di forms melainkan bisa saja ditempat lain seperti diatas.\ndemonstrasi # contoh kode php yang rentan dengan os command injection karena ketiadaan validasi input ataupun proses filtering.\n\u0026lt;?php $ip = $_GET['ip']; $cmd = system('ping '.$ip); echo $cmd ?\u0026gt; buat file ping.php \u0026amp; jalankan diterminal kalian $ php -S 127.0.0.1:8000 -t .\nkunjungi dan cobalah masukan input seperti ini\nhttp://127.0.0.1:8000/ping.php?ip=cat%20/etc/passwd\nmaka jika dibrowser saya, ini tidak menghasilkan apa-apa. dikarenakan perintah cat /etc/passwd masih dianggap sebagai argumen untuk ping.\n[Thu Sep 1 18:16:34 2022] 127.0.0.1:41126 Accepted ping: unknown host cat [Thu Sep 1 18:16:34 2022] 127.0.0.1:41125 [200]: GET /ping.php?ip=cat%20/etc/passwd [Thu Sep 1 18:16:34 2022] 127.0.0.1:41125 Closing bisa dilihat disana ada pesan uknown host cat. yang menandakan perintah cat kita dianggap destination dari ping. nah kalian bisa mencoba nya lagi dengan membatalkan perintah ping dengan shell escapes.\n; | || \u0026lt; \u0026amp; \u0026amp;\u0026amp; $() let\u0026rsquo;s try again\nhttp://127.0.0.1:8000/ping.php?ip=;cat /etc/passwd\nmaka kalian bisa melihat bahwa disini kita berhasil untuk melakukan perintah cat terhadap file passwd.\nbtw saya ngejalanin file php nya di termux, jadi output dari /etc/passwd nya agak aneh hhe.\nother references # beberapa referensi lain yang membahas command injection lebih detail.\ncommand injection https://book.hacktricks.xyz/pentesting-web/command-injection ","content_html":"\n\u003cimg src=\"/images/cuteheker.jpeg\"\u003e\n\n\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eos command injection biasanya terjadi ketika seorang web developer keliru\ndalam mengatur penerimaan input didalam situsnya. biasanya terjadi ketika\nform input yang dibuat menggunakan fungsi seperti \u003ccode\u003eexec()\u003c/code\u003e, \u003ccode\u003esystem()\u003c/code\u003e, dll.\ntergantung fungsi tersebut berasal dari bahasa pemogramman apa. jika python\nbiasanya menggunakan \u003ccode\u003eos.system()\u003c/code\u003e atau \u003ccode\u003eeval()\u003c/code\u003e, etc.\u003c/p\u003e\n\u003cp\u003etentu saja ini jadi sesuatu yang sangat berbahaya dikarenakan attacker dapat\nmemasukan perintah berbahaya kedalam shell sistem operasi yang ada disitus tersebut.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSerangan command injection bisa terjadi ketika sebuah aplikasi\n(forms, cookies, HTTP headers, dll) bisa menjalankan perintah yang\ntidak aman dari inputan user ke sistem shell.\n\n\u003ca href=\"https://crashtest-security.com/command-injection/\"\u003ecrashtest security\u003c/a\u003e\n\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003emenurut crashtest security, os command injection tidak hanya bisa terjadi\ndi forms melainkan bisa saja ditempat lain seperti diatas.\u003c/p\u003e\n\u003ch1 id=\"demonstrasi\"\u003edemonstrasi \u003ca href=\"#demonstrasi\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003econtoh kode php yang rentan dengan os command injection karena ketiadaan\nvalidasi input ataupun proses filtering.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003e\u0026lt;?php\n$ip = $_GET['ip'];\n$cmd = system('ping '.$ip); \n\necho $cmd\n?\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003ebuat file \u003ccode\u003eping.php\u003c/code\u003e \u0026amp; jalankan diterminal kalian\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e$ php -S 127.0.0.1:8000 -t .\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003ekunjungi dan cobalah masukan input seperti ini\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ehttp://127.0.0.1:8000/ping.php?ip=cat%20/etc/passwd\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003emaka jika dibrowser saya, ini tidak menghasilkan apa-apa. dikarenakan perintah\n\u003cstrong\u003ecat /etc/passwd\u003c/strong\u003e masih dianggap sebagai argumen untuk ping.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003e[Thu Sep  1 18:16:34 2022] 127.0.0.1:41126 Accepted\nping: unknown host cat\n[Thu Sep  1 18:16:34 2022] 127.0.0.1:41125 [200]: GET /ping.php?ip=cat%20/etc/passwd\n[Thu Sep  1 18:16:34 2022] 127.0.0.1:41125 Closing\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ebisa dilihat disana ada pesan \u003cstrong\u003euknown host cat\u003c/strong\u003e. yang menandakan perintah cat\nkita dianggap destination dari ping. nah kalian bisa mencoba nya lagi\ndengan membatalkan perintah ping dengan shell escapes.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e;\n|\n||\n\u0026lt;\n\u0026amp;\n\u0026amp;\u0026amp;\n$()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003elet\u0026rsquo;s try again\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ehttp://127.0.0.1:8000/ping.php?ip=;cat /etc/passwd\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003emaka kalian bisa melihat bahwa disini kita berhasil untuk melakukan perintah cat\nterhadap file passwd.\u003c/p\u003e\n\n\u003cimg src=\"/images/oci.jpg\"\u003e\n\n\n\u003cp\u003ebtw saya ngejalanin file php nya di termux, jadi output dari \u003cstrong\u003e/etc/passwd\u003c/strong\u003e nya\nagak aneh hhe.\u003c/p\u003e\n\u003ch1 id=\"other-references\"\u003eother references \u003ca href=\"#other-references\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003ebeberapa referensi lain yang membahas command injection lebih detail.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ecommand injection\n\u003ca href=\"https://book.hacktricks.xyz/pentesting-web/command-injection\"\u003ehttps://book.hacktricks.xyz/pentesting-web/command-injection\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","url":"https://hnvdie.github.io/os-command-injection/","image":"https://hnvdie.github.io/photos/<no value>","banner_image":"https://hnvdie.github.io/photos/<no value>","date_published":"1096-01-09T90:11:00+00:00","date_modified":"1096-01-09T90:11:00+00:00","author":{"name":"Ronalds Vilcins","url":"https://ronaldsvilcins.com/"}},{"id":"df68ef0626105e0e41737295f3f82352851221e7","title":"Bypass IP restriction at sfile.mobi - writeup","summary":"","content_text":" write up sederhana tentang bagaimana saya bisa menemukan bug IP restriction bypass di situs sfile.mobi.\ndan mendapatkan reward yang lumayan, hanya karena laporan bug sepele ini.\nFYI (For you information) # jadi sebelumnya saya menemukan data leakage dari salah satu website yang tidak bisa saya sebutkan. karena ini privasi web diluar sfile.mobi. yang mana data tersebut berisi informasi seperti username, password dan email. dikarenakan situs yang terdapat data leakage tersebut adalah situs yang memiliki latar belakang seperti sfile.mobi juga. yaitu service free file sharing service. jadinya saya mempunyai ide yang cukup cemerlang.\nkarena saya sering mengunjungi situs sfile.mobi buat download config :/\u0026lt; terlintas dalam pikiran saya.\n\u0026ldquo;apa para pengguna didata yang saya miliki ini, juga login disitus sfile.mobi?\u0026rdquo;\ndan yap tercetus lah ide untuk melakukan brute-forcing.\nProof OF Concept # awalnya saya mencoba mengunjungi halaman sfile.mobi dan ke halaman loginnya untuk melakukan web scraping. yang URL nya berada disini.\nhttps://sfile.mobi/login.php\ndengan tujuan membuat tool atau bot otomatisasi login dengan ribuan data yang saya punya diatas tadi. awalnya saya hanya menulis program sederhana untuk mencobanya. dan ini hasil yang saya temukan.\nsource code: pastebin terlihat disana menunjukan status kode 401 dan programnya crash (stuck) tidak jalan lagi. dikarenakan halaman loginnya sudah tidak bisa diakses atau terkena limit IP. sama hal ketika saya kunjungi melalui browser, IP saya pun sudah terbanned.\nlantas saya mencoba alternatif lain untuk melakukan brute-force tanpa harus terkena limit IP.\nyang pertama saya mencoba dengan proxy namun tetap saja gagal, tidak bisa ditembus. langkah kedua saya mencoba melakukan injeksi terhadap headers ketika melakukan POST request.yaitu melakukan bypass IP source restrictions dengan HTTP headers.\ndisini saya hanya memodifikasi header nya dengan menambahkan nilai.\n\u0026quot;X-Forwarded-For\u0026quot;: IP SPOOF / FAKE IP untuk fake IP saya hanya membuat alamat ip random, asal-asalan saja. dengan syntax python seperti ini atau bisa lihat lengkap disource code bawah.\nip = \u0026quot;.\u0026quot;.join(map(str, (random.randint(0, 255) for _ in range(4)))) source code: pastebin ketika saya jalankan programnya, ternyata IP limit bypassed. saya mencoba ngeload sekitar ribuan akun ternyata bisa dan mendapatkan banyak akun yang online (registered) di platform sfile.mobi.\nstatus bug: patched Referensi tentang IP restriction bypass # 403/401 Bypasses https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/403-and-401-bypasses 403/401 bypass hackerone report https://hackerone.com/reports/991717 IP restriction (root-me CTF) https://archiko.my.id/archives/root-me-writeup-ip-restriction-bypass/ 403 bypass - medium https://sapt.medium.com/bypassing-403-protection-to-get-pagespeed-admin-access-822fab64c0b3 ","content_html":"\u003cp\u003e\n\u003ca href=\"https://www.indiedb.com/groups/tanks/images/girls-und-panzer-gif\" title=\"Girls und Panzer GIF - Indie DB\" target=\"_blank\"\u003e\u003cimg src=\"https://media.indiedb.com/cache/images/groups/1/3/2074/thumb_620x2000/maus_gif.gif\" alt=\"Girls und Panzer GIF\" /\u003e\u003c/a\u003e\n\n\nwrite up sederhana tentang bagaimana saya bisa menemukan bug IP restriction bypass di situs sfile.mobi.\u003c/p\u003e\n\u003cp\u003edan mendapatkan reward yang lumayan, hanya karena laporan bug sepele ini.\u003c/p\u003e\n\u003ch3 id=\"fyi-for-you-information\"\u003eFYI (For you information) \u003ca href=\"#fyi-for-you-information\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003ejadi sebelumnya saya menemukan data leakage dari salah satu website yang tidak bisa saya sebutkan. karena ini privasi web diluar sfile.mobi. yang mana\ndata tersebut berisi informasi seperti username, password dan email. dikarenakan situs yang terdapat data leakage tersebut adalah situs yang memiliki latar belakang seperti sfile.mobi juga. yaitu service \u003cstrong\u003efree file sharing service\u003c/strong\u003e. jadinya saya mempunyai ide yang cukup cemerlang.\u003c/p\u003e\n\u003cp\u003ekarena saya sering mengunjungi situs sfile.mobi buat download config :/\u0026lt;\nterlintas dalam pikiran saya.\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;\u003cem\u003eapa para pengguna didata yang saya miliki ini, juga login disitus sfile.mobi?\u003c/em\u003e\u0026rdquo;\u003c/p\u003e\n\u003cp\u003edan yap tercetus lah ide untuk melakukan brute-forcing.\u003c/p\u003e\n\u003ch1 id=\"proof-of-concept\"\u003eProof OF Concept \u003ca href=\"#proof-of-concept\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003eawalnya saya mencoba mengunjungi halaman sfile.mobi dan ke halaman loginnya untuk melakukan web scraping.\nyang URL nya berada disini.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps://sfile.mobi/login.php\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003edengan tujuan membuat tool atau bot otomatisasi login dengan ribuan data yang saya punya\ndiatas tadi. awalnya saya hanya menulis program sederhana untuk mencobanya. dan ini hasil yang\nsaya temukan.\u003c/p\u003e\n\n\u003cimg src=\"/images/pp1.jpg\" \u003e\nsource code: \u003ca href=\" https://pastebin.com/raw/Kg3p0XKx\"\u003epastebin\u003c/a\u003e\n\n\n\u003cp\u003eterlihat disana menunjukan status kode 401 dan programnya crash (stuck) tidak jalan lagi.\ndikarenakan halaman loginnya sudah tidak bisa diakses atau terkena limit IP.\nsama hal ketika saya kunjungi melalui browser, IP saya pun sudah terbanned.\u003c/p\u003e\n\n\u003cimg src=\"/images/pp2.jpg\" \u003e\n\n\n\u003cp\u003elantas saya mencoba alternatif lain untuk melakukan brute-force tanpa harus terkena limit IP.\u003c/p\u003e\n\u003cp\u003eyang pertama saya mencoba dengan proxy namun tetap saja gagal, tidak bisa ditembus.\nlangkah kedua saya mencoba melakukan injeksi terhadap headers ketika melakukan POST\nrequest.yaitu melakukan bypass IP source restrictions dengan HTTP headers.\u003c/p\u003e\n\u003cp\u003edisini saya hanya memodifikasi header nya dengan menambahkan nilai.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003e\u0026quot;X-Forwarded-For\u0026quot;: IP SPOOF / FAKE IP\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003euntuk fake IP saya hanya membuat alamat ip random, asal-asalan saja.\ndengan syntax python seperti ini atau bisa lihat lengkap disource code bawah.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-python\"\u003eip = \u0026quot;.\u0026quot;.join(map(str, (random.randint(0, 255) for _ in range(4))))\n\u003c/code\u003e\u003c/pre\u003e\n\nsource code: \u003ca href=\"https://pastebin.com/raw/Z8nG0T7s\"\u003epastebin\u003c/a\u003e\n\n\n\u003cp\u003eketika saya jalankan programnya, ternyata IP limit bypassed. saya mencoba ngeload sekitar\nribuan akun ternyata bisa dan mendapatkan banyak akun yang online (registered) di platform\nsfile.mobi.\u003c/p\u003e\n\n\u003cimg src=\"/images/pp3.jpg\" \u003e\n\n\n\u003cul\u003e\n\u003cli\u003estatus bug: \u003ccode\u003epatched\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"referensi-tentang-ip-restriction-bypass\"\u003eReferensi tentang IP restriction bypass \u003ca href=\"#referensi-tentang-ip-restriction-bypass\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e403/401 Bypasses\n\u003ca href=\"https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/403-and-401-bypasses\"\u003ehttps://book.hacktricks.xyz/network-services-pentesting/pentesting-web/403-and-401-bypasses\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e403/401 bypass hackerone report\n\u003ca href=\"https://hackerone.com/reports/991717\"\u003ehttps://hackerone.com/reports/991717\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eIP restriction (root-me CTF)\n\u003ca href=\"https://archiko.my.id/archives/root-me-writeup-ip-restriction-bypass/\"\u003ehttps://archiko.my.id/archives/root-me-writeup-ip-restriction-bypass/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e403 bypass - medium\n\u003ca href=\"https://sapt.medium.com/bypassing-403-protection-to-get-pagespeed-admin-access-822fab64c0b3\"\u003ehttps://sapt.medium.com/bypassing-403-protection-to-get-pagespeed-admin-access-822fab64c0b3\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","url":"https://hnvdie.github.io/bypass-ip-restriction-at-sfile.mobi/","image":"https://hnvdie.github.io/photos/<no value>","banner_image":"https://hnvdie.github.io/photos/<no value>","date_published":"27086-27-09T80:2727:00+00:00","date_modified":"27086-27-09T80:2727:00+00:00","author":{"name":"Ronalds Vilcins","url":"https://ronaldsvilcins.com/"}},{"id":"3c25037c6c05b45c050435c8f138ab49a0756ffc","title":"summary of reconnaissance for web application bug hunting 🕷","summary":"panduan dasar untuk melakukan information gathering terhadap web application sebagai awalan untuk melakukan bug hunting","content_text":" **notes**: in this article if you found text like this here is a tools or platforms. you just search that on google or other search engines. this article will be to always updated if me found new techniques or methods. base # whois: whois ssl information: sslscan dns enum: dnsrecon nslookup dnsx dnsenum https://www.geeksforgeeks.org/dnsx-dns-toolkit-allow-to-run-multiple-dns-queries/amp/\nhttps://medium.com/geekculture/dns-enumeration-3dc90ca1f670\nhttps://book.hacktricks.xyz/network-services-pentesting/pentesting-dns\nidentify web technology: whatweb w3techs wappalyzer cmsmap check webapp firewall: wafw00f check security headers: shcheck subdo enum: subfinder sublist3r extracting all IP from collected subdo port scanning \u0026amp; banner grabbing: nmap amass aquatone Using Nmap Scripts: Nmap Banner Grab https://linuxhint.com/nmap_banner_grab\nmass ports scanning with nmap\n$ nmap -iL subdolist.txt -Pn -sV -n -T4 -v -oN output.txt vuln scan + banner grabbing\n$ nmap -iL subdolist.txt -Pn -sV -n -T4 -v -d --script vuln -oN output.txt check domain takeoverv: subzy domain \u0026amp; subdo osint: shodan censys check http(s) 80/443 \u0026gt; httpx \u0026gt; altdns \u0026gt; nuclei reverse IP lookup hackertarget googledork bing Content discovery # fuzzing, wfuzz\nget error like sql inject, system crash, dos, etc. ffuf\nsearch directory, sensitive data, etc. find API path / Endpoint waybackurls\nif link possible to vuln. scanning with nuclei or fuzzing again with ffuf for getting vulnerability like sqli. get files from target like php, aspx, etc. extract js files\nscan endpoint, API, etc. github dorking \u0026gt; githound\nchecking leaked credential, tokens, etc. google dorking content discovery with google hacking Tips # • always see web source code because sometimes you can found somethink interesting which not found or not gained in your tool recon.\n• if you found admin path like admin/. fuzzing again with ffuf like admin/FUZZ. you can find somethink interesting files or dir again if lucky.\nExtra resources for you :3 # Cool Recon techniques every hacker misses! 🔥🔥 https://infosecwriteups.com/cool-recon-techniques-every-hacker-misses-1c5e0e294e89\n","content_html":"\n\u003cimg src=\"https://images.unsplash.com/photo-1562813733-b31f71025d54?ixlib=rb-1.2.1\u0026ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8\u0026auto=format\u0026fit=crop\u0026w=869\u0026q=80\"\u003e\n\n\n\u003cp\u003e\u003ccode\u003e**notes**: \u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ein this article if you found text like this \u003ccode\u003ehere\u003c/code\u003e is a tools or platforms. you just search that on google or other search engines.\u003c/li\u003e\n\u003cli\u003ethis article will be to always updated if me found new techniques or methods.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"base\"\u003ebase \u003ca href=\"#base\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003ewhois: \u003ccode\u003ewhois\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003essl information: \u003ccode\u003esslscan\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003edns enum: \u003ccode\u003ednsrecon\u003c/code\u003e \u003ccode\u003enslookup\u003c/code\u003e \u003ccode\u003ednsx\u003c/code\u003e \u003ccode\u003ednsenum\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://www.geeksforgeeks.org/dnsx-dns-toolkit-allow-to-run-multiple-dns-queries/amp/\"\u003ehttps://www.geeksforgeeks.org/dnsx-dns-toolkit-allow-to-run-multiple-dns-queries/amp/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://medium.com/geekculture/dns-enumeration-3dc90ca1f670\"\u003ehttps://medium.com/geekculture/dns-enumeration-3dc90ca1f670\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://book.hacktricks.xyz/network-services-pentesting/pentesting-dns\"\u003ehttps://book.hacktricks.xyz/network-services-pentesting/pentesting-dns\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eidentify web technology: \u003ccode\u003ewhatweb\u003c/code\u003e \u003ccode\u003ew3techs\u003c/code\u003e \u003ccode\u003ewappalyzer\u003c/code\u003e \u003ccode\u003ecmsmap\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003echeck webapp firewall: \u003ccode\u003ewafw00f\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003echeck security headers: \u003ccode\u003eshcheck\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003esubdo enum: \u003ccode\u003esubfinder\u003c/code\u003e \u003ccode\u003esublist3r\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eextracting all IP from collected subdo\u003c/li\u003e\n\u003cli\u003eport scanning \u0026amp; banner grabbing: \u003ccode\u003enmap\u003c/code\u003e \u003ccode\u003eamass\u003c/code\u003e \u003ccode\u003eaquatone\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eUsing Nmap Scripts: Nmap Banner Grab\n\u003ca href=\"https://linuxhint.com/nmap_banner_grab\"\u003ehttps://linuxhint.com/nmap_banner_grab\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003emass ports scanning with nmap\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003e$ nmap -iL subdolist.txt -Pn -sV -n -T4 -v  -oN output.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003evuln scan + banner grabbing\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003e$ nmap -iL subdolist.txt -Pn -sV -n -T4 -v -d  --script vuln -oN output.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003echeck domain takeoverv: \u003ccode\u003esubzy\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003edomain \u0026amp; subdo osint: \u003ccode\u003eshodan\u003c/code\u003e \u003ccode\u003ecensys\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003echeck http(s) 80/443 \u0026gt; \u003ccode\u003ehttpx\u003c/code\u003e \u0026gt; \u003ccode\u003ealtdns\u003c/code\u003e \u0026gt; \u003ccode\u003enuclei\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ereverse IP lookup \u003ccode\u003ehackertarget\u003c/code\u003e \u003ccode\u003egoogledork\u003c/code\u003e \u003ccode\u003ebing\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content-discovery\"\u003eContent discovery \u003ca href=\"#content-discovery\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003efuzzing, \u003ccode\u003ewfuzz\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eget error like sql inject, system crash, dos, etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003effuf\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003esearch directory, sensitive data, etc.\u003c/li\u003e\n\u003cli\u003efind API path / Endpoint\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ewaybackurls\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eif link possible to vuln. scanning with \u003ccode\u003enuclei\u003c/code\u003e or fuzzing again with \u003ccode\u003effuf\u003c/code\u003e\nfor getting vulnerability like sqli.\u003c/li\u003e\n\u003cli\u003eget files from target like php, aspx, etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eextract js files\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003escan endpoint, API, etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003egithub dorking \u0026gt; \u003ccode\u003egithound\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003echecking leaked credential, tokens, etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cimg src=\"https://i.ibb.co/Hx6whny/IMG-20220824-153323.jpg\"\u003e\n\n\n\u003cul\u003e\n\u003cli\u003egoogle dorking\n\u003cul\u003e\n\u003cli\u003econtent discovery with \u003ccode\u003egoogle hacking\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"tips\"\u003eTips \u003ca href=\"#tips\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e• always see web source code because sometimes you can found somethink interesting which not found or not gained in your tool recon.\u003c/p\u003e\n\u003cp\u003e• if you found admin path like admin/. fuzzing again with ffuf like admin/FUZZ. you can find somethink interesting files or dir again if lucky.\u003c/p\u003e\n\u003ch1 id=\"extra-resources-for-you-3\"\u003eExtra resources for you :3 \u003ca href=\"#extra-resources-for-you-3\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eCool Recon techniques every hacker misses! 🔥🔥\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://infosecwriteups.com/cool-recon-techniques-every-hacker-misses-1c5e0e294e89\"\u003ehttps://infosecwriteups.com/cool-recon-techniques-every-hacker-misses-1c5e0e294e89\u003c/a\u003e\u003c/p\u003e\n","url":"https://hnvdie.github.io/reconnaissance-summary/","image":"https://hnvdie.github.io/photos/<no value>","banner_image":"https://hnvdie.github.io/photos/<no value>","date_published":"26086-26-09T80:2626:00+00:00","date_modified":"26086-26-09T80:2626:00+00:00","author":{"name":"Ronalds Vilcins","url":"https://ronaldsvilcins.com/"}}]}