{"version":"https://jsonfeed.org/version/1","title":"HnvDie","home_page_url":"https://hnvdie.github.io/","feed_url":"https://ronaldsvilcins.com/feed.json","description":"wannabe hacker","icon":"https://ronaldsvilcins.com/assets/apple-touch-icon.png","favicon":"https://ronaldsvilcins.com/assets/favicon.ico","expired":false,"author":{"name":"Ronalds Vilcins","url":"https://ronaldsvilcins.com/"},"items":[{"id":"50e75afac5abaa6dcc0913d785086bc5609d6365","title":"vulnerability scanning for webapp (bahasa)","summary":"vulnerability scanning adalah fase selanjutnya sesudah  melakukan reconnaissance. difase ini kita diharuskan mencari kerentanan apa saja dari target, agar bisa lanjut..","content_text":" vulnerability scanning adalah fase selanjutnya sesudah melakukan reconnaissance. difase ini kita diharuskan mencari kerentanan apa saja dari target, agar bisa lanjut ke tahap post-exploitation atau gaining access nantinya.\nmenurut saya pribadi melakukan vulnerability scanning itu terbagi kepada 2 cara.\nautomated scanning secara garis besar disini kita memeriksa kerentanan pada target dengan menggunakan tools yang ada diluar sana. bisa dibilang mencari kerentanan dengan otomatis. seperti menggunakan nessus,nmap, nikto dll.\nmanual scanning mencari atau memeriksa kerentanan target dengan manual. seperti memeriksa kerentanan serangan terhadap SQL Injection, LFI, PHP Code Injection, dll.\nTypes of vulnerability scanning # Jika diatas adalah bahagian cara untuk melakukan scanning maka untuk tipe-tipe vulnerability scanning itu ada 2 kalo menurut saya pribadi lagi. karena saya juga tidak tahu apakah ada lagi selain ini.\nnetwork vulnerability scanning seperti memeriksa webserver, sistem operasi, daemon dan service lainnya yang berjalan ditarget seperti SSH,FTP, dll.\nyang mana nantinya kita bisa melakukan pencarian apakah webserver, sistem operasi dan service lainnya yang digunakan target punya kerentanan. kita bisa mengidentifikasinya melalui Common Vulnerabilities and Exposures (CVE). platform exploit-db salah satunya.\nweb application scanning sama dengan poin manual scanning diatas. namun disini tidak hanya secara manual melainkan menggunakan tools scanner seperti w3af, grabber, dll.\nJika ditahap information-gathering kalian sudah mengetahui jika target menggukan CMS. semisal wordpress maka kalian bisa melakukan scanning menggunakan tool wpscan untuk menemukan kerentanan.\nbiasanya untuk masalah CMS ada tool yang menyediakan all in one. seperti CMS detector beserta pemeriksaan kerentanan apa saja didalam CMS tersebut.\nTools for vulnerability scanning # vulnerability scanner for web application # nuclei Fast and customizable vulnerability scanner based on simple YAML based DSL. Nuclei is used to send requests across targets based on a template, leading to zero false positives and providing fast scanning on a large number of hosts. Nuclei offers scanning for a variety of protocols, including TCP, DNS, HTTP, SSL, File, Whois, Websocket, Headless etc. With powerful and flexible templating, Nuclei can be used to model all kinds of security checks.\nWe have a dedicated repository that houses various type of vulnerability templates contributed by more than 300 security researchers and engineers.\nhttps://github.com/projectdiscovery/nuclei\nnikto: a web server scanner Nikto is an Open Source (GPL) web server scanner which performs comprehensive tests against web servers for multiple items, including over 6700 potentially dangerous files/programs, checks for outdated versions of over 1250 servers, and version specific problems on over 270 servers. It also checks for server configuration items such as the presence of multiple index files, HTTP server options, and will attempt to identify installed web servers and software. Scan items and plugins are frequently updated and can be automatically updated.\nhttps://github.com/sullo/nikto\nw3af: web application attack and audit framework, the open source web vulnerability scanner. w3af is an open source web application security scanner which helps developers and penetration testers identify and exploit vulnerabilities in their web applications.\nThe scanner is able to identify 200+ vulnerabilities, including Cross-Site Scripting, SQL injection and OS commanding.\nhttps://github.com/andresriancho/w3af\ngrabber: Do not use this tool, it\u0026rsquo;s an artifact from the past. Use Burp or w3af! ðŸ˜­ Grabber is a web application scanner. Basically it detects some kind of vulnerabilities\tin your website. Grabber is simple, not fast but portable and really adaptable. This software is designed to scan small websites such as personals, forums etc. absolutely not big application: it would take too long time and flood your network.\nBecause it\u0026rsquo;s a small tool, the set of vulnerabilities is small\u0026hellip;\nCross-Site Scripting SQL Injection (there is also a special Blind SQL Injection module) File Inclusion Backup files check Simple AJAX check (parse every JavaScript and get the URL and try to get the parameters) Hybrid analysis/Crystal ball testing for PHP application using PHP-SAT JavaScript source code analyzer: Evaluation of the quality/correctness of the JavaScript with JavaScript Lint Generation of a file [session_id, time(t)] for next stats analysis. https://github.com/neuroo/grabber\nburp Burp Scanner is a tool for performing automated scans of web sites, to discover content and audit for vulnerabilities.\nhttps://portswigger.net/burp/vulnerability-scanner\nvulnerability scanner for network infrastructure # nmap: the Network Mapper. Nmap (Network Mapper) is a network scanner created by Gordon Lyon (also known by his pseudonym Fyodor Vaskovich). Nmap is used to discover hosts and services on a computer network by sending packets and analyzing the responses.\nhttps://nmap.org\nmetasploit: The worldâ€™s most used penetration testing framework The Metasploit Project is a computer security project that provides information about security vulnerabilities and aids in penetration testing and IDS signature development. It is owned by Boston, Massachusetts-based security company Rapid7.\nhttps://www.metasploit.com\nopenvas: Open Vulnerability Assessment Scanner can perform vulnerability scans on web applications, networks and databases. It shines in the ability it has to quickly scan and accurately identify vulnerabilities hidden safely on the network.\nhttps://www.openvas.org\nNetcat: The TCP/IP swiss army Netcat uses TCP and UDP connections to write data to and read data from the networked devices within your environment. Like many of the tools that we have looked at, it can be integrated into scripts or run as a standalone tool.\n","content_html":"\n\u003cimg src=\"https://image.myanimelist.net/ui/_3fYL8i6Q-n-155t3dn_4ibmr7CXmsW3cHWcNJqvO8noUaDtFFkNFgKso3Kx7XLC\"\u003e\n\n\n\u003cp\u003evulnerability scanning adalah fase selanjutnya sesudah  melakukan reconnaissance.\ndifase ini kita diharuskan mencari kerentanan apa saja dari target, agar bisa lanjut\nke tahap post-exploitation atau gaining access nantinya.\u003c/p\u003e\n\u003cp\u003emenurut saya pribadi melakukan vulnerability scanning itu terbagi kepada 2 cara.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eautomated scanning\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003esecara garis besar disini kita memeriksa kerentanan pada target dengan\nmenggunakan tools yang ada diluar sana. bisa dibilang mencari kerentanan dengan\notomatis. seperti menggunakan \u003ccode\u003enessus\u003c/code\u003e,\u003ccode\u003enmap\u003c/code\u003e, \u003ccode\u003enikto\u003c/code\u003e dll.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003emanual scanning\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003emencari atau memeriksa kerentanan target dengan manual. seperti memeriksa\nkerentanan serangan terhadap \u003ccode\u003eSQL Injection\u003c/code\u003e, \u003ccode\u003eLFI\u003c/code\u003e, \u003ccode\u003ePHP Code Injection\u003c/code\u003e, dll.\u003c/p\u003e\n\u003ch1 id=\"types-of-vulnerability-scanning\"\u003eTypes of vulnerability scanning \u003ca href=\"#types-of-vulnerability-scanning\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003eJika diatas adalah bahagian cara untuk melakukan scanning  maka untuk tipe-tipe vulnerability\nscanning itu ada 2 kalo menurut saya pribadi lagi. karena saya juga tidak tahu apakah ada lagi selain ini.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003enetwork vulnerability scanning\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eseperti memeriksa webserver, sistem operasi, daemon dan service lainnya yang berjalan\nditarget seperti \u003ccode\u003eSSH\u003c/code\u003e,\u003ccode\u003eFTP\u003c/code\u003e, dll.\u003c/p\u003e\n\u003cp\u003eyang mana nantinya kita bisa melakukan pencarian\napakah webserver, sistem operasi dan service lainnya yang digunakan target\npunya kerentanan. kita bisa mengidentifikasinya melalui\nCommon Vulnerabilities and Exposures (CVE). platform \u003ccode\u003eexploit-db\u003c/code\u003e salah satunya.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eweb application scanning\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003esama dengan poin \u003ccode\u003emanual scanning\u003c/code\u003e diatas. namun disini tidak hanya secara manual\nmelainkan menggunakan tools scanner seperti \u003ccode\u003ew3af\u003c/code\u003e, \u003ccode\u003egrabber\u003c/code\u003e, dll.\u003c/p\u003e\n\u003cp\u003eJika ditahap information-gathering kalian sudah mengetahui jika target menggukan\nCMS. semisal \u003ccode\u003ewordpress\u003c/code\u003e maka kalian bisa melakukan scanning menggunakan tool \u003ccode\u003ewpscan\u003c/code\u003e\nuntuk menemukan kerentanan.\u003c/p\u003e\n\u003cp\u003ebiasanya untuk masalah CMS ada tool yang menyediakan all in one.\nseperti CMS detector beserta pemeriksaan kerentanan apa saja didalam CMS tersebut.\u003c/p\u003e\n\u003ch1 id=\"tools-for-vulnerability-scanning\"\u003eTools for vulnerability scanning \u003ca href=\"#tools-for-vulnerability-scanning\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003ch3 id=\"vulnerability-scanner-for-web-application\"\u003evulnerability scanner for web application \u003ca href=\"#vulnerability-scanner-for-web-application\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003enuclei\u003c/code\u003e Fast and customizable vulnerability scanner based on simple YAML based DSL.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNuclei is used to send requests across targets based on a template, leading to zero false positives and providing fast scanning on a large number of hosts. Nuclei offers scanning for a variety of protocols, including TCP, DNS, HTTP, SSL, File, Whois, Websocket, Headless etc. With powerful and flexible templating, Nuclei can be used to model all kinds of security checks.\u003c/p\u003e\n\u003cp\u003eWe have a dedicated repository that houses various type of vulnerability templates contributed by more than 300 security researchers and engineers.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/projectdiscovery/nuclei\"\u003ehttps://github.com/projectdiscovery/nuclei\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003enikto:\u003c/code\u003e a web server scanner\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNikto is an Open Source (GPL) web server scanner which performs comprehensive tests against web servers for multiple items, including over 6700 potentially dangerous files/programs, checks for outdated versions of over 1250 servers, and version specific problems on over 270 servers. It also checks for server configuration items such as the presence of multiple index files, HTTP server options, and will attempt to identify installed web servers and software. Scan items and plugins are frequently updated and can be automatically updated.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/sullo/nikto\"\u003ehttps://github.com/sullo/nikto\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ew3af:\u003c/code\u003e web application attack and audit framework, the open source web vulnerability scanner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ew3af is an open source web application security scanner which helps developers and penetration testers identify and exploit vulnerabilities in their web applications.\u003c/p\u003e\n\u003cp\u003eThe scanner is able to identify 200+ vulnerabilities, including Cross-Site Scripting, SQL injection and OS commanding.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/andresriancho/w3af\"\u003ehttps://github.com/andresriancho/w3af\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003egrabber:\u003c/code\u003e Do not use this tool, it\u0026rsquo;s an artifact from the past. Use Burp or w3af! ðŸ˜­\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eGrabber is a web application scanner. Basically it detects some kind of vulnerabilities\tin your website.\nGrabber is simple, not fast but portable and really adaptable. This software is designed to scan small websites such as personals, forums etc. absolutely not big application: it would take too long time and flood your network.\u003c/p\u003e\n\u003cp\u003eBecause it\u0026rsquo;s a small tool, the set of vulnerabilities is small\u0026hellip;\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCross-Site Scripting\u003c/li\u003e\n\u003cli\u003eSQL Injection (there is also a special Blind SQL Injection module)\u003c/li\u003e\n\u003cli\u003eFile Inclusion\u003c/li\u003e\n\u003cli\u003eBackup files check\u003c/li\u003e\n\u003cli\u003eSimple AJAX check (parse every JavaScript and get the URL and try to get the parameters)\u003c/li\u003e\n\u003cli\u003eHybrid analysis/Crystal ball testing for PHP application using PHP-SAT\u003c/li\u003e\n\u003cli\u003eJavaScript source code analyzer: Evaluation of the quality/correctness of the JavaScript with JavaScript Lint\u003c/li\u003e\n\u003cli\u003eGeneration of a file [session_id, time(t)] for next stats analysis.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/neuroo/grabber\"\u003ehttps://github.com/neuroo/grabber\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eburp\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBurp Scanner is a tool for performing automated scans of web sites, to discover content and audit for vulnerabilities.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://portswigger.net/burp/vulnerability-scanner\"\u003ehttps://portswigger.net/burp/vulnerability-scanner\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"vulnerability-scanner-for-network-infrastructure\"\u003evulnerability scanner for network infrastructure \u003ca href=\"#vulnerability-scanner-for-network-infrastructure\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003enmap:\u003c/code\u003e the Network Mapper.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNmap (Network Mapper) is a network scanner created by Gordon Lyon (also known by his pseudonym Fyodor Vaskovich). Nmap is used to discover hosts and services on a computer network by sending packets and analyzing the responses.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://nmap.org\"\u003ehttps://nmap.org\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003emetasploit: \u003c/code\u003e The worldâ€™s most used penetration testing framework\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe Metasploit Project is a computer security project that provides information about security vulnerabilities and aids in penetration testing and IDS signature development. It is owned by Boston, Massachusetts-based security company Rapid7.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.metasploit.com\"\u003ehttps://www.metasploit.com\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eopenvas:\u003c/code\u003e Open Vulnerability Assessment Scanner\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ecan perform vulnerability scans on web applications, networks and databases. It shines in the ability it has to quickly scan and accurately identify vulnerabilities hidden safely on the network.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.openvas.org\"\u003ehttps://www.openvas.org\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eNetcat:\u003c/code\u003e The TCP/IP swiss army\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNetcat uses TCP and UDP connections to write data to and read data from the networked devices within your environment. Like many of the tools that we have looked at, it can be integrated into scripts or run as a standalone tool.\u003c/p\u003e\n","url":"https://hnvdie.github.io/vulnerability-scanning-for-webapp/","image":"https://hnvdie.github.io/photos/<no value>","banner_image":"https://hnvdie.github.io/photos/<no value>","date_published":"28086-28-09T80:2828:00+00:00","date_modified":"28086-28-09T80:2828:00+00:00","author":{"name":"Ronalds Vilcins","url":"https://ronaldsvilcins.com/"}},{"id":"df68ef0626105e0e41737295f3f82352851221e7","title":"Bypass IP restriction at sfile.mobi - writeup","summary":"","content_text":" write up sederhana tentang bagaimana saya bisa menemukan bug IP restriction bypass di situs sfile.mobi.\ndan mendapatkan reward yang lumayan, hanya karena laporan bug sepele ini.\nFYI (For you information) # jadi sebelumnya saya menemukan data leakage dari salah satu website yang tidak bisa saya sebutkan. karena ini privasi web diluar sfile.mobi. yang mana data tersebut berisi informasi seperti username, password dan email. dikarenakan situs yang terdapat data leakage tersebut adalah situs yang memiliki latar belakang seperti sfile.mobi juga. yaitu service free file sharing service. jadinya saya mempunyai ide yang cukup cemerlang.\nkarena saya sering mengunjungi situs sfile.mobi buat download config :/\u0026lt; terlintas dalam pikiran saya.\n\u0026ldquo;apa para pengguna didata yang saya miliki ini, juga login disitus sfile.mobi?\u0026rdquo;\ndan yap tercetus lah ide untuk melakukan brute-forcing.\nProof OF Concept # awalnya saya mencoba mengunjungi halaman sfile.mobi dan ke halaman loginnya untuk melakukan web scraping. yang URL nya berada disini.\nhttps://sfile.mobi/login.php\ndengan tujuan membuat tool atau bot otomatisasi login dengan ribuan data yang saya punya diatas tadi. awalnya saya hanya menulis program sederhana untuk mencobanya. dan ini hasil yang saya temukan.\nsource code: pastebin terlihat disana menunjukan status kode 401 dan programnya crash (stuck) tidak jalan lagi. dikarenakan halaman loginnya sudah tidak bisa diakses atau terkena limit IP. sama hal ketika saya kunjungi melalui browser, IP saya pun sudah terbanned.\nlantas saya mencoba alternatif lain untuk melakukan brute-force tanpa harus terkena limit IP.\nyang pertama saya mencoba dengan proxy namun tetap saja gagal, tidak bisa ditembus. langkah kedua saya mencoba melakukan injeksi terhadap headers ketika melakukan POST request.yaitu melakukan bypass IP source restrictions dengan HTTP headers.\ndisini saya hanya memodifikasi header nya dengan menambahkan nilai.\n\u0026quot;X-Forwarded-For\u0026quot;: IP SPOOF / FAKE IP untuk fake IP saya hanya membuat alamat ip random, asal-asalan saja. dengan syntax python seperti ini atau bisa lihat lengkap disource code bawah.\nip = \u0026quot;.\u0026quot;.join(map(str, (random.randint(0, 255) for _ in range(4)))) source code: pastebin ketika saya jalankan programnya, ternyata IP limit bypassed. saya mencoba ngeload sekitar ribuan akun ternyata bisa dan mendapatkan banyak akun yang online (registered) di platform sfile.mobi.\nstatus bug: patched Referensi tentang IP restriction bypass # 403/401 Bypasses https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/403-and-401-bypasses 403/401 bypass hackerone report https://hackerone.com/reports/991717 IP restriction (root-me CTF) https://archiko.my.id/archives/root-me-writeup-ip-restriction-bypass/ ","content_html":"\u003cp\u003e\n\u003ca href=\"https://www.indiedb.com/groups/tanks/images/girls-und-panzer-gif\" title=\"Girls und Panzer GIF - Indie DB\" target=\"_blank\"\u003e\u003cimg src=\"https://media.indiedb.com/cache/images/groups/1/3/2074/thumb_620x2000/maus_gif.gif\" alt=\"Girls und Panzer GIF\" /\u003e\u003c/a\u003e\n\n\nwrite up sederhana tentang bagaimana saya bisa menemukan bug IP restriction bypass di situs sfile.mobi.\u003c/p\u003e\n\u003cp\u003edan mendapatkan reward yang lumayan, hanya karena laporan bug sepele ini.\u003c/p\u003e\n\u003ch3 id=\"fyi-for-you-information\"\u003eFYI (For you information) \u003ca href=\"#fyi-for-you-information\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003ejadi sebelumnya saya menemukan data leakage dari salah satu website yang tidak bisa saya sebutkan. karena ini privasi web diluar sfile.mobi. yang mana\ndata tersebut berisi informasi seperti username, password dan email. dikarenakan situs yang terdapat data leakage tersebut adalah situs yang memiliki latar belakang seperti sfile.mobi juga. yaitu service \u003cstrong\u003efree file sharing service\u003c/strong\u003e. jadinya saya mempunyai ide yang cukup cemerlang.\u003c/p\u003e\n\u003cp\u003ekarena saya sering mengunjungi situs sfile.mobi buat download config :/\u0026lt;\nterlintas dalam pikiran saya.\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;\u003cem\u003eapa para pengguna didata yang saya miliki ini, juga login disitus sfile.mobi?\u003c/em\u003e\u0026rdquo;\u003c/p\u003e\n\u003cp\u003edan yap tercetus lah ide untuk melakukan brute-forcing.\u003c/p\u003e\n\u003ch1 id=\"proof-of-concept\"\u003eProof OF Concept \u003ca href=\"#proof-of-concept\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003eawalnya saya mencoba mengunjungi halaman sfile.mobi dan ke halaman loginnya untuk melakukan web scraping.\nyang URL nya berada disini.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps://sfile.mobi/login.php\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003edengan tujuan membuat tool atau bot otomatisasi login dengan ribuan data yang saya punya\ndiatas tadi. awalnya saya hanya menulis program sederhana untuk mencobanya. dan ini hasil yang\nsaya temukan.\u003c/p\u003e\n\n\u003cimg src=\"/images/pp1.jpg\" \u003e\nsource code: \u003ca href=\" https://pastebin.com/raw/Kg3p0XKx\"\u003epastebin\u003c/a\u003e\n\n\n\u003cp\u003eterlihat disana menunjukan status kode 401 dan programnya crash (stuck) tidak jalan lagi.\ndikarenakan halaman loginnya sudah tidak bisa diakses atau terkena limit IP.\nsama hal ketika saya kunjungi melalui browser, IP saya pun sudah terbanned.\u003c/p\u003e\n\n\u003cimg src=\"/images/pp2.jpg\" \u003e\n\n\n\u003cp\u003elantas saya mencoba alternatif lain untuk melakukan brute-force tanpa harus terkena limit IP.\u003c/p\u003e\n\u003cp\u003eyang pertama saya mencoba dengan proxy namun tetap saja gagal, tidak bisa ditembus.\nlangkah kedua saya mencoba melakukan injeksi terhadap headers ketika melakukan POST\nrequest.yaitu melakukan bypass IP source restrictions dengan HTTP headers.\u003c/p\u003e\n\u003cp\u003edisini saya hanya memodifikasi header nya dengan menambahkan nilai.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003e\u0026quot;X-Forwarded-For\u0026quot;: IP SPOOF / FAKE IP\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003euntuk fake IP saya hanya membuat alamat ip random, asal-asalan saja.\ndengan syntax python seperti ini atau bisa lihat lengkap disource code bawah.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-python\"\u003eip = \u0026quot;.\u0026quot;.join(map(str, (random.randint(0, 255) for _ in range(4))))\n\u003c/code\u003e\u003c/pre\u003e\n\nsource code: \u003ca href=\"https://pastebin.com/raw/Z8nG0T7s\"\u003epastebin\u003c/a\u003e\n\n\n\u003cp\u003eketika saya jalankan programnya, ternyata IP limit bypassed. saya mencoba ngeload sekitar\nribuan akun ternyata bisa dan mendapatkan banyak akun yang online (registered) di platform\nsfile.mobi.\u003c/p\u003e\n\n\u003cimg src=\"/images/pp3.jpg\" \u003e\n\n\n\u003cul\u003e\n\u003cli\u003estatus bug: \u003ccode\u003epatched\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"referensi-tentang-ip-restriction-bypass\"\u003eReferensi tentang IP restriction bypass \u003ca href=\"#referensi-tentang-ip-restriction-bypass\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e403/401 Bypasses\n\u003ca href=\"https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/403-and-401-bypasses\"\u003ehttps://book.hacktricks.xyz/network-services-pentesting/pentesting-web/403-and-401-bypasses\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e403/401 bypass hackerone report\n\u003ca href=\"https://hackerone.com/reports/991717\"\u003ehttps://hackerone.com/reports/991717\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eIP restriction (root-me CTF)\n\u003ca href=\"https://archiko.my.id/archives/root-me-writeup-ip-restriction-bypass/\"\u003ehttps://archiko.my.id/archives/root-me-writeup-ip-restriction-bypass/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","url":"https://hnvdie.github.io/bypass-ip-restriction-at-sfile.mobi/","image":"https://hnvdie.github.io/photos/<no value>","banner_image":"https://hnvdie.github.io/photos/<no value>","date_published":"27086-27-09T80:2727:00+00:00","date_modified":"27086-27-09T80:2727:00+00:00","author":{"name":"Ronalds Vilcins","url":"https://ronaldsvilcins.com/"}},{"id":"3c25037c6c05b45c050435c8f138ab49a0756ffc","title":"summary of reconnaissance for web application bug hunting ðŸ•·","summary":"panduan dasar untuk melakukan information gathering terhadap web application sebagai awalan untuk melakukan bug hunting","content_text":" **notes**: in this article if you found text like this here is a tools or platforms. you just search that on google or other search engines. this article will be to always updated if me found new techniques or methods. base # whois: whois dns enum: dnsrecon nslookup dnsx dnsenum https://www.geeksforgeeks.org/dnsx-dns-toolkit-allow-to-run-multiple-dns-queries/amp/\nhttps://medium.com/geekculture/dns-enumeration-3dc90ca1f670\nhttps://book.hacktricks.xyz/network-services-pentesting/pentesting-dns\nidentify web technology: whatweb w3techs wappalyzer check webapp firewall: wafw00f check security headers: shcheck subdo enum: subfinder sublist3r extracting all IP from collected subdo port scanning \u0026amp; banner grabbing: nmap amass aquatone Using Nmap Scripts: Nmap Banner Grab https://linuxhint.com/nmap_banner_grab\nmass ports scanning with nmap\n$ nmap -iL subdolist.txt -Pn -sV -n -T4 -v -oN output.txt vuln scan + banner grabbing\n$ nmap -iL subdolist.txt -Pn -sV -n -T4 -v -d --script vuln -oN output.txt check domain takeoverv: subzy domain \u0026amp; subdo osint: shodan censys check http(s) 80/443 \u0026gt; httpx \u0026gt; altdns \u0026gt; nuclei reverse IP lookup hackertarget googledork bing Content discovery # fuzzing, wfuzz\nget error like sql inject, system crash, dos, etc. ffuf\nsearch directory, sensitive data, etc. find API path / Endpoint waybackurls\nif link possible to vuln. scanning with nuclei or fuzzing again with ffuf for getting vulnerability like sqli. get files from target like php, aspx, etc. extract js files\nscan endpoint, API, etc. github dorking \u0026gt; githound\nchecking leaked credential, tokens, etc. google dorking content discovery with google hacking Tips # â€¢ always see web source code because sometimes you can found somethink interesting which not found or not gained in your tool recon.\nâ€¢ if you found admin path like admin/. fuzzing again with ffuf like admin/FUZZ. you can find somethink interesting files or dir again if lucky.\nExtra resources for you :3 # Cool Recon techniques every hacker misses! ðŸ”¥ðŸ”¥ https://infosecwriteups.com/cool-recon-techniques-every-hacker-misses-1c5e0e294e89\n","content_html":"\n\u003cimg src=\"https://images.unsplash.com/photo-1562813733-b31f71025d54?ixlib=rb-1.2.1\u0026ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8\u0026auto=format\u0026fit=crop\u0026w=869\u0026q=80\"\u003e\n\n\n\u003cp\u003e\u003ccode\u003e**notes**: \u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ein this article if you found text like this \u003ccode\u003ehere\u003c/code\u003e is a tools or platforms. you just search that on google or other search engines.\u003c/li\u003e\n\u003cli\u003ethis article will be to always updated if me found new techniques or methods.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"base\"\u003ebase \u003ca href=\"#base\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003ewhois: \u003ccode\u003ewhois\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003edns enum: \u003ccode\u003ednsrecon\u003c/code\u003e \u003ccode\u003enslookup\u003c/code\u003e \u003ccode\u003ednsx\u003c/code\u003e \u003ccode\u003ednsenum\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://www.geeksforgeeks.org/dnsx-dns-toolkit-allow-to-run-multiple-dns-queries/amp/\"\u003ehttps://www.geeksforgeeks.org/dnsx-dns-toolkit-allow-to-run-multiple-dns-queries/amp/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://medium.com/geekculture/dns-enumeration-3dc90ca1f670\"\u003ehttps://medium.com/geekculture/dns-enumeration-3dc90ca1f670\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://book.hacktricks.xyz/network-services-pentesting/pentesting-dns\"\u003ehttps://book.hacktricks.xyz/network-services-pentesting/pentesting-dns\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eidentify web technology: \u003ccode\u003ewhatweb\u003c/code\u003e \u003ccode\u003ew3techs\u003c/code\u003e \u003ccode\u003ewappalyzer\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003echeck webapp firewall: \u003ccode\u003ewafw00f\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003echeck security headers: \u003ccode\u003eshcheck\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003esubdo enum: \u003ccode\u003esubfinder\u003c/code\u003e \u003ccode\u003esublist3r\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eextracting all IP from collected subdo\u003c/li\u003e\n\u003cli\u003eport scanning \u0026amp; banner grabbing: \u003ccode\u003enmap\u003c/code\u003e \u003ccode\u003eamass\u003c/code\u003e \u003ccode\u003eaquatone\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eUsing Nmap Scripts: Nmap Banner Grab\n\u003ca href=\"https://linuxhint.com/nmap_banner_grab\"\u003ehttps://linuxhint.com/nmap_banner_grab\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003emass ports scanning with nmap\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003e$ nmap -iL subdolist.txt -Pn -sV -n -T4 -v  -oN output.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003evuln scan + banner grabbing\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-shell\"\u003e$ nmap -iL subdolist.txt -Pn -sV -n -T4 -v -d  --script vuln -oN output.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003echeck domain takeoverv: \u003ccode\u003esubzy\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003edomain \u0026amp; subdo osint: \u003ccode\u003eshodan\u003c/code\u003e \u003ccode\u003ecensys\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003echeck http(s) 80/443 \u0026gt; \u003ccode\u003ehttpx\u003c/code\u003e \u0026gt; \u003ccode\u003ealtdns\u003c/code\u003e \u0026gt; \u003ccode\u003enuclei\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ereverse IP lookup \u003ccode\u003ehackertarget\u003c/code\u003e \u003ccode\u003egoogledork\u003c/code\u003e \u003ccode\u003ebing\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"content-discovery\"\u003eContent discovery \u003ca href=\"#content-discovery\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003efuzzing, \u003ccode\u003ewfuzz\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eget error like sql inject, system crash, dos, etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003effuf\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003esearch directory, sensitive data, etc.\u003c/li\u003e\n\u003cli\u003efind API path / Endpoint\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ewaybackurls\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eif link possible to vuln. scanning with \u003ccode\u003enuclei\u003c/code\u003e or fuzzing again with \u003ccode\u003effuf\u003c/code\u003e\nfor getting vulnerability like sqli.\u003c/li\u003e\n\u003cli\u003eget files from target like php, aspx, etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eextract js files\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003escan endpoint, API, etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003egithub dorking \u0026gt; \u003ccode\u003egithound\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003echecking leaked credential, tokens, etc.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cimg src=\"https://i.ibb.co/Hx6whny/IMG-20220824-153323.jpg\"\u003e\n\n\n\u003cul\u003e\n\u003cli\u003egoogle dorking\n\u003cul\u003e\n\u003cli\u003econtent discovery with \u003ccode\u003egoogle hacking\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"tips\"\u003eTips \u003ca href=\"#tips\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003eâ€¢ always see web source code because sometimes you can found somethink interesting which not found or not gained in your tool recon.\u003c/p\u003e\n\u003cp\u003eâ€¢ if you found admin path like admin/. fuzzing again with ffuf like admin/FUZZ. you can find somethink interesting files or dir again if lucky.\u003c/p\u003e\n\u003ch1 id=\"extra-resources-for-you-3\"\u003eExtra resources for you :3 \u003ca href=\"#extra-resources-for-you-3\" class=\"hash\"\u003e#\u003c/a\u003e\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eCool Recon techniques every hacker misses! ðŸ”¥ðŸ”¥\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://infosecwriteups.com/cool-recon-techniques-every-hacker-misses-1c5e0e294e89\"\u003ehttps://infosecwriteups.com/cool-recon-techniques-every-hacker-misses-1c5e0e294e89\u003c/a\u003e\u003c/p\u003e\n","url":"https://hnvdie.github.io/reconnaissance-summary/","image":"https://hnvdie.github.io/photos/<no value>","banner_image":"https://hnvdie.github.io/photos/<no value>","date_published":"26086-26-09T80:2626:00+00:00","date_modified":"26086-26-09T80:2626:00+00:00","author":{"name":"Ronalds Vilcins","url":"https://ronaldsvilcins.com/"}}]}